apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: api
      name: api
    spec:
      ports:
        - name: "8001"
          port: 8001
          targetPort: 8001
        - name: "4567"
          port: 4567
          targetPort: 4567
        - name: "4667"
          port: 4667
          targetPort: 4667
      selector:
        io.kompose.service: api
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: db
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: nginx
      name: nginx
    spec:
      ports:
        - name: "80"
          port: 80
          targetPort: 80
        - name: "443"
          port: 443
          targetPort: 443
      externalIPs: 
      - 164.90.139.137
      selector:
        io.kompose.service: nginx
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: redis-statistics
      name: redis-statistics
    spec:
      ports:
        - name: "6380"
          port: 6380
          targetPort: 6380
      selector:
        io.kompose.service: redis-statistics
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: redis-task-queue
      name: redis-task-queue
    spec:
      ports:
        - name: "6379"
          port: 6379
          targetPort: 6379
      selector:
        io.kompose.service: redis-task-queue
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seaweedfs-filer
      name: seaweedfs-filer
    spec:
      ports:
        - name: "8888"
          port: 8888
          targetPort: 8888
        - name: "18888"
          port: 18888
          targetPort: 18888
      selector:
        io.kompose.service: seaweedfs-filer
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seaweedfs-master
      name: seaweedfs-master
    spec:
      ports:
        - name: "9333"
          port: 9333
          targetPort: 9333
        - name: "19333"
          port: 19333
          targetPort: 19333
      selector:
        io.kompose.service: seaweedfs-master
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seaweedfs-volume
      name: seaweedfs-volume
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
        - name: "18080"
          port: 18080
          targetPort: 18080
      selector:
        io.kompose.service: seaweedfs-volume
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: api
      name: api
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: api
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: api
        spec:
          containers:
            - args:
                - bash
                - -c
                - python3 /daas/manage.py collectstatic --no-input && cd /daas/ && gunicorn daas.wsgi --timeout 300 -b 0.0.0.0:8001
              name: api
              image: metalion25/daas_api
              ports:
                - containerPort: 8001
                - containerPort: 4567
                - containerPort: 4667
              resources: {}
              volumeMounts:
                - mountPath: /daas
                  name: api-hostpath0
                - mountPath: /daas/daas_app/tests/resources/
                  name: api-hostpath1
                - mountPath: /static
                  name: api-hostpath2
                - mountPath: /home/root/conf
                  name: api-hostpath3
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/daas/daas
              name: api-hostpath0
            - hostPath:
                path: /root/daas/daas
              name: api-hostpath1
            - hostPath:
                path: /root/daas/daas/static
              name: api-hostpath2
            - hostPath:
                path: /root/daas/daas/gunicorn_config
              name: api-hostpath3
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - env:
                - name: POSTGRES_DB
                  value: daas
                - name: POSTGRES_PASSWORD
                  value: iamaweakpassword
                - name: POSTGRES_USER
                  value: daas
              image: postgres:10.5
              name: db
              ports:
                - containerPort: 5432
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: db-hostpath0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/postgres-data
              name: db-hostpath0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: flash-worker
      name: flash-worker
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: flash-worker
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: flash-worker
        spec:
          containers:
            - args:
                - bash
                - -c
                - "rq worker --path / --url redis://redis-task-queue:6379/0 flash_queue --name agent_$(hostname -I | cut -d' ' -f1)_$(echo $RANDOM)__$(date +%s)"
              image: metalion25/daas_flash_worker
              name: flash-worker
              resources: {}
              volumeMounts:
                - mountPath: /daas
                  name: flash-worker-hostpath0
                - mountPath: /tmpfs
                  name: flash-worker-tmpfs0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/daas/decompilers
              name: flash-worker-hostpath0
            - emptyDir:
                medium: Memory
              name: flash-worker-tmpfs0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: java-worker
      name: java-worker
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: java-worker
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: java-worker
        spec:
          containers:
            - args:
                - bash
                - -c
                - "rq worker --path / --url redis://redis-task-queue:6379/0 java_queue --name agent_$(hostname -I | cut -d' ' -f1)_$(echo $RANDOM)__$(date +%s)"
              image: metalion25/daas_java_worker
              name: java-worker
              resources: {}
              volumeMounts:
                - mountPath: /daas
                  name: java-worker-hostpath0
                - mountPath: /tmpfs
                  name: java-worker-tmpfs0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/daas/decompilers
              name: java-worker-hostpath0
            - emptyDir:
                medium: Memory
              name: java-worker-tmpfs0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: meta-extractor-worker
      name: meta-extractor-worker
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: meta-extractor-worker
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: meta-extractor-worker
        spec:
          containers:
            - args:
                - bash
                - -c
                - "rq worker --path / --url redis://redis-task-queue:6379/0 unknown unknown_requeued --name agent_$(hostname -I | cut -d' ' -f1)_$(echo $RANDOM)__$(date +%s)"
              image: metalion25/daas_meta_extractor_worker
              name: meta-extractor-worker
              resources: {}
              volumeMounts:
                - mountPath: /daas
                  name: meta-extractor-worker-hostpath0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/daas/meta_extractor
              name: meta-extractor-worker-hostpath0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: nginx
      name: nginx
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: nginx
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: nginx
        spec:
          containers:
            - image: nginx:1.15.8
              name: nginx
              ports:
                - containerPort: 80
                - containerPort: 443
              resources: {}
              volumeMounts:
                - mountPath: /etc/nginx/conf.d
                  name: nginx-hostpath0
                - mountPath: /etc/ssl/certs
                  name: nginx-hostpath1
                - mountPath: /etc/ssl/private
                  name: nginx-hostpath2
                - mountPath: /etc/nginx/snippets
                  name: nginx-hostpath3
                - mountPath: /static_files
                  name: nginx-hostpath4
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/daas/nginx_config
              name: nginx-hostpath0
            - hostPath:
                path: /root/daas/daas/certificates/etc_ssl_certs
              name: nginx-hostpath1
            - hostPath:
                path: /root/daas/daas/certificates/etc_ssl_private
              name: nginx-hostpath2
            - hostPath:
                path: /root/daas/daas/nginx_snippets
              name: nginx-hostpath3
            - hostPath:
                path: /root/daas/daas/daas/static
              name: nginx-hostpath4
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: pe-worker
      name: pe-worker
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: pe-worker
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: pe-worker
        spec:
          containers:
            - args:
                - bash
                - -c
                - "rq worker --path / --url redis://redis-task-queue:6379/0 pe_queue --name agent_$(hostname -I | cut -d' ' -f1)_$(echo $RANDOM)__$(date +%s)"
              image: metalion25/daas_pe_worker
              name: pe-worker
              resources: {}
              volumeMounts:
                - mountPath: /daas
                  name: pe-worker-hostpath0
                - mountPath: /just_decompile/
                  name: pe-worker-hostpath1
                - mountPath: /tmpfs
                  name: pe-worker-tmpfs0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/daas/decompilers
              name: pe-worker-hostpath0
            - hostPath:
                path: /root/daas/daas/utils/just_decompile
              name: pe-worker-hostpath1
            - emptyDir:
                medium: Memory
              name: pe-worker-tmpfs0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: redis
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: redis
        spec:
          containers:
            - args:
                - redis-server
                - --port
                - "6379"
              image: redis:7
              name: redis
              ports:
                - containerPort: 6379
              resources: {}
              volumeMounts:
                - mountPath: /data
                  name: redis-hostpath0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/redis-data
              name: redis-hostpath0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seaweedfs-filer
      name: seaweedfs-filer
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: seaweedfs-filer
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: seaweedfs-filer
        spec:
          containers:
            - args:
                - ./seaweed
                - filer
                - -master=seaweedfs-master:9333
                - -port=8888
              image: metalion25/daas_seaweedfs_filer
              name: seaweedfs-filer
              ports:
                - containerPort: 8888
                - containerPort: 18888
              resources: {}
              volumeMounts:
                - mountPath: /etc/seaweedfs/
                  name: seaweedfs-filer-hostpath0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/daas/seaweedfs
              name: seaweedfs-filer-hostpath0
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seaweedfs-master
      name: seaweedfs-master
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: seaweedfs-master
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: seaweedfs-master
        spec:
          containers:
            - args:
                - ./seaweed
                - master
              image: metalion25/daas_seaweedfs_master
              name: seaweedfs-master
              ports:
                - containerPort: 9333
                - containerPort: 19333
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: seaweedfs-volume
      name: seaweedfs-volume
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: seaweedfs-volume
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-k8s.yml --volumes hostPath -o daas-k8s.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: seaweedfs-volume
        spec:
          containers:
            - args:
                - ./seaweed
                - volume
                - -dir=/volume_data
                - -max=1
                - -mserver=seaweedfs-master:9333
                - -port=8080
              image: metalion25/daas_seaweedfs_volume
              name: seaweedfs-volume
              ports:
                - containerPort: 8080
                - containerPort: 18080
              resources: {}
              volumeMounts:
                - mountPath: /data
                  name: seaweedfs-volume-hostpath0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /root/daas/seaweedfs-data
              name: seaweedfs-volume-hostpath0
    status: {}
kind: List
metadata: {}

