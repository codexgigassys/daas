services:
  api:
    build:
      context: .
      target: testing
    command: bash -c "python3 /daas/manage.py collectstatic --no-input && cd /daas/ && gunicorn daas.wsgi --timeout 300 -b 0.0.0.0:8001"
    env_file: .env
    volumes:
      - ./daas:/daas
      - /daas/daas_app/tests/resources/ # to not mount tests resources
      - ./static:/static
      - ./gunicorn_config/:/home/root/conf
      - ../coverage/:/coverage/
    ports:
      - "8001:8001"
    expose:
      - "4567-4667"
    depends_on:
      - db
    links:
      - syslog
    tmpfs:
      - /tmpfs
    environment:
      - CIRCLECI=${CIRCLECI}
      # coverage will not execute on prod since sitecustomize.py is not modified
      - COVERAGE_PROCESS_START=/daas/cov_subprocess
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_PRODUCTION=${DJANGO_PRODUCTION}
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "api"

  redis:
    image: redis:7
    env_file: .env
    expose:
      - "6379"
    command: redis-server /data/redis.conf
    volumes:
      - ../redis-data:/data
    links:
      - syslog
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "redis"

  db:
    image: postgres:17
    expose:
      - "5432"
    volumes:
      - ../postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: daas
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: daas
    links:
      - syslog
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "db"

  meta-extractor-worker:
    build:
      context: .
      dockerfile: metaExtractorWorkerDockerfile
    command: bash -c "rq worker --path / --url ${REDIS_PROTOCOL}:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0 unknown unknown_requeued --name agent_$$(hostname -I | cut -d' ' -f1)_$$(echo $$RANDOM)__$$(date +%s) && echo dummy_command"
    env_file: .env
    volumes:
      - ./meta_extractor:/daas
      - ../coverage/:/coverage/
    links:
      - redis
      - syslog
    environment:
      - CIRCLECI=${CIRCLECI}
      - COVERAGE_PROCESS_START=/meta_extractor/coverage_meta_extractor
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "meta-extractor-worker"

  pe-worker:
    build:
      context: .
      dockerfile: peWorkerDockerfile
    command: bash -c "rq worker --path / --url ${REDIS_PROTOCOL}:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0 pe_queue --name agent_$$(hostname -I | cut -d' ' -f1)_$$(echo $$RANDOM)__$$(date +%s) && echo dummy_command"
    env_file: .env
    volumes:
      - ./decompilers:/decompilers
      - ./utils/just_decompile:/just_decompile/
      - ../coverage/:/coverage/
    tmpfs:
      - /tmpfs
    links:
      - redis
      - syslog
    environment:
      - CIRCLECI=${CIRCLECI}
      - COVERAGE_PROCESS_START=/decompilers/coverage_decompiler_pe
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "pe-worker"

  flash-worker:
    build:
      context: .
      dockerfile: flashWorkerDockerfile
    command: bash -c "rq worker --path / --url ${REDIS_PROTOCOL}:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0 flash_queue --name agent_$$(hostname -I | cut -d' ' -f1)_$$(echo $$RANDOM)__$$(date +%s) && echo dummy_command"
    env_file: .env
    volumes:
      - ./decompilers:/decompilers
      - ../coverage/:/coverage/
    tmpfs:
      - /tmpfs
    links:
      - redis
      - syslog
    environment:
      - CIRCLECI=${CIRCLECI}
      - COVERAGE_PROCESS_START=/decompilers/coverage_decompiler_flash
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "flash-worker"

  java-worker:
    build:
      context: .
      dockerfile: javaWorkerDockerfile
    command: bash -c "rq worker --path / --url ${REDIS_PROTOCOL}:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0 java_queue --name agent_$$(hostname -I | cut -d' ' -f1)_$$(echo $$RANDOM)__$$(date +%s) && echo dummy_command"
    env_file: .env
    volumes:
      - ./decompilers:/decompilers
      - ../coverage/:/coverage/
    tmpfs:
      - /tmpfs
    links:
      - redis
      - syslog
    environment:
      - CIRCLECI=${CIRCLECI}
      - COVERAGE_PROCESS_START=/decompilers/coverage_decompiler_java
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "java-worker"

  apk-worker:
    build:
      context: .
      dockerfile: apkWorkerDockerfile
    command: bash -c "rq worker --path / --url ${REDIS_PROTOCOL}:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0 apk_queue --name agent_$$(hostname -I | cut -d' ' -f1)_$$(echo $$RANDOM)__$$(date +%s) && echo dummy_command "
    env_file: .env
    volumes:
      - ./decompilers:/decompilers
      - ../coverage/:/coverage/
    tmpfs:
      - /tmpfs
    links:
      - redis
      - syslog
    environment:
      - CIRCLECI=${CIRCLECI}
      - COVERAGE_PROCESS_START=/decompilers/coverage_decompiler_apk
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "apk-worker"

  syslog:
    image: voxxit/rsyslog
    volumes:
      - ../syslog/:/var/log/
    entrypoint: sh -c "rm -f /var/run/rsyslogd.pid && rsyslogd -n"
    ports:
      - "127.0.0.1:5515:514/udp"
      - "127.0.0.1:5515:514/tcp"
    environment:
      - CIRCLECI=${CIRCLECI}

  nginx:
    image: nginx:1.15.8
    volumes:
      - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx-logs:/var/log/nginx
      - ./certificates/nginx/etc_ssl_certs:/etc/ssl/certs
      - ./certificates/nginx/etc_ssl_private:/etc/ssl/private
      - ./nginx_snippets:/etc/nginx/snippets
      - ./daas/static:/static_files

    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "nginx"

  seaweedfs-master:
    build:
      context: .
      dockerfile: seaweedfsDockerfile
    command: ./seaweed master -ip=seaweedfs-master
    ports:
      - "9333:9333"
    expose:
      - "19333"
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "seaweedfs-master"

  seaweedfs-volume:
    build:
      context: .
      dockerfile: seaweedfsDockerfile
    command: ./seaweed volume -dir=/volume_data -max=1 -mserver=seaweedfs-master:9333 -port=8080 -ip=seaweedfs-volume
    volumes:
       - ../seaweedfs-data:/data
    links:
      - seaweedfs-master
    ports:
      - "8080:8080"
    expose:
      - "18080"
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "seaweedfs-volume"

  seaweedfs-filer:
    build:
      context: .
      dockerfile: seaweedfsDockerfile
    command: ./seaweed filer -master=seaweedfs-master:9333 -port=8888 -ip=seaweedfs-filer
    volumes:
      - ./seaweedfs:/etc/seaweedfs/
    expose:
      - "8888"
      - "18888"
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "seaweedfs-filer"

  coverage:
    build:
      context: .
      dockerfile: coverageDockerfile
    command: bash -i
    stdin_open: true
    volumes:
      - ./:/daas
      - ../coverage/:/coverage/
    links:
      - syslog
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:5515"
        tag: "coverage"
